// Code generated by protoc-gen-store. DO NOT EDIT.
// version: v0.0.1
// source: no_package/message.proto

package pb

import (
	bolt "go.etcd.io/bbolt"
	"google.golang.org/protobuf/proto"
)

const (
	TestMessageKey       string = "TestMessage"
	HelloWorldMessageKey string = "HelloWorldMessage"
)

type StoreSoul []byte
type Store struct {
	db *bolt.DB
}

func (store *Store) SetTestMessage(soul StoreSoul, data *TestMessage) error {
	return store.db.Update(func(tx *bolt.Tx) error {
		bucket, err := tx.CreateBucketIfNotExists([]byte(TestMessageKey))
		if err != nil {
			return err
		}

		dataBytes, err := proto.Marshal(data)
		if err != nil {
			return err
		}

		return bucket.Put(soul, dataBytes)
	})
}

func (store *Store) GetTestMessage(soul StoreSoul) (result *TestMessage, err error) {
	err = store.db.View(func(tx *bolt.Tx) error {
		bucket, err := tx.CreateBucketIfNotExists([]byte(TestMessageKey))
		if err != nil {
			return err
		}

		data := bucket.Get(soul)
		return proto.Unmarshal(data, result)
	})

	return result, err
}

func (store *Store) SetHelloWorldMessage(soul StoreSoul, data *HelloWorldMessage) error {
	return store.db.Update(func(tx *bolt.Tx) error {
		bucket, err := tx.CreateBucketIfNotExists([]byte(HelloWorldMessageKey))
		if err != nil {
			return err
		}

		dataBytes, err := proto.Marshal(data)
		if err != nil {
			return err
		}

		return bucket.Put(soul, dataBytes)
	})
}

func (store *Store) GetHelloWorldMessage(soul StoreSoul) (result *HelloWorldMessage, err error) {
	err = store.db.View(func(tx *bolt.Tx) error {
		bucket, err := tx.CreateBucketIfNotExists([]byte(HelloWorldMessageKey))
		if err != nil {
			return err
		}

		data := bucket.Get(soul)
		return proto.Unmarshal(data, result)
	})

	return result, err
}
