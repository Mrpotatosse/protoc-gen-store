package generator

import (
	"fmt"

	"google.golang.org/protobuf/compiler/protogen"
)

func GenerateFile(plugin *protogen.Plugin, file *protogen.File) error {
	outputFilePath := fmt.Sprintf("%s.pb.store.go", file.GeneratedFilenamePrefix)
	outputFile := plugin.NewGeneratedFile(outputFilePath, ".")

	output := NewOutput(
		WithHeaderComments([]string{
			"Code generated by protoc-gen-store. DO NOT EDIT.",
			fmt.Sprintf("version: %s", "v0.0.1"),
			fmt.Sprintf("source: %s", file.Proto.GetName()),
		}),
		WithPackageName(string(file.GoPackageName)),
		WithImports([]string{
			`bolt "go.etcd.io/bbolt"`,
			`"google.golang.org/protobuf/proto"`,
		}),
		WithProtoPackage(file.Proto.GetPackage()),
	)

	for _, message := range file.Messages {
		hasID := false

		for _, field := range message.Fields {
			if field.GoName == "Id" && field.Desc.Kind().String() == "string" {
				hasID = true
				break
			}
		}

		AppendMessage(OutputMessage{
			Name:  message.GoIdent.GoName,
			HasID: hasID,
		})(output)
	}

	return output.Write(outputFile)
}
